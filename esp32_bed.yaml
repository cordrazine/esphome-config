# Master Bedroom Bed controller
# filename: esp32_bed.yaml
# Automations are in Node-red
# Functionality:
#   Bed occupance detection sensors for each side of the bed with a Force Sensitive Resistor (FSR) SF15-600
#   Bed underglow with individual addressable LED strip WS2812B of 5 meter (30 LED / meter)
#   Motion sensor to detect motion under the bed (HC SR-501)
#   Temperature and humidity sensor (BME280)
#
### Declarations ####
substitutions:
# Identity
  devicename: bed
  upper_devicename: Bed

# Device
  platform: ESP32
  board: mhetesp32minikit # MH-ET Live (ESP32 MiniKit, D1 mini compatible)
  #  board_flash_mode: dout

# Network
  static_ip: 192.168.20.111
  gateway: 192.168.20.1
  subnet: 255.255.255.0

# General
logger:
  level: DEBUG

esphome:
  name: ${devicename}
  platform: $platform
  board: $board
    
wifi:
  # Use AP upperfloor
  ssid: !secret wifi_not_ssid
  password: !secret wifi_not_psw
  manual_ip:
    static_ip: $static_ip
    gateway: $gateway
    subnet: $subnet
  # needed for hidden SSID
  fast_connect: true
  
  ap:
    ssid: ${upper_devicename} AP
    password: !secret wifi_hotspot_psw

captive_portal:

# Enable Home Assistant API
api:

ota:
  password: !secret ota_psw

# for the BME280
i2c:
  - id: bus_a
    sda: GPIO21
    scl: GPIO22
    scan: True

esp32_ble_tracker:

bluetooth_proxy:
  active: true

sensor:
  - platform: bme280
    temperature:
      name: "${upper_devicename} Temperature"
      id: ${devicename}_temperature
      oversampling: 16x
    pressure:
      name: "${upper_devicename} Pressure"
      id: ${devicename}_pressure
    humidity:
      name: "${upper_devicename} Humidity"
      id: ${devicename}_humidity
    address: 0x76
    update_interval: 15s
  - platform: template
    name: "${upper_devicename} Absolute Humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(${devicename}_temperature).state) /
        (id(${devicename}_temperature).state + 243.5)) * id(${devicename}_humidity).state * mw) /
        ((273.15 + id(${devicename}_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 15s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'
  - platform: template
    name: "${upper_devicename} Dew Point"
    lambda: return (243.5*(log(id(${devicename}_humidity).state/100)+((17.67*id(${devicename}_temperature).state)/
      (243.5+id(${devicename}_temperature).state)))/(17.67-log(id(${devicename}_humidity).state/100)-
      ((17.67*id(${devicename}_temperature).state)/(243.5+id(${devicename}_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'

  # Bed Right Side (Piet)
  - platform: adc
    pin: GPIO35
    name: "${upper_devicename} Right"
    update_interval: 0.5s
    attenuation: 11db
    filters:
      - sliding_window_moving_average:
          window_size: 10
          send_every: 1
      - or:
        - throttle: 180s
        - delta: 0.02
    on_value_range:
      - above: 1.50
        then:
          - logger.log: ${upper_devicename} right occupancy detected
          - binary_sensor.template.publish:
              id: ${devicename}_right_occupied
              state: ON
          - if:
              condition:
                binary_sensor.is_on: ${devicename}_left_occupied
              then:
                - logger.log: ${upper_devicename} Both occupancy detected
                - binary_sensor.template.publish:
                    id: ${devicename}_both_occupied
                    state: ON
      - below: 1.49
        then:
          - logger.log: ${upper_devicename} right occupancy released
          - binary_sensor.template.publish:
              id: ${devicename}_right_occupied
              state: OFF
          - binary_sensor.template.publish:
              id: ${devicename}_both_occupied
              state: OFF


  # Bed Left Side (Senta)
  - platform: adc 
    pin: GPIO34
    name: "${upper_devicename} Left"
    update_interval: 0.5s
    attenuation: 11db
    filters:
      - sliding_window_moving_average:
          window_size: 10
          send_every: 1
      - or:
        - throttle: 180s
        - delta: 0.02
        
    on_value_range:
      - above: 1.50
        then:
          - logger.log: ${upper_devicename} left occupancy detected
          - binary_sensor.template.publish:
              id: ${devicename}_left_occupied
              state: ON
          - if:
              condition:
                binary_sensor.is_on: ${devicename}_right_occupied
              then:
                - logger.log: ${upper_devicename} Both occupancy detected
                - binary_sensor.template.publish:
                    id: ${devicename}_both_occupied
                    state: ON
      - below: 1.49
        then:
          - logger.log: ${upper_devicename} left occupancy released
          - binary_sensor.template.publish:
              id: ${devicename}_left_occupied
              state: OFF
          - binary_sensor.template.publish:
              id: ${devicename}_both_occupied
              state: OFF
    
  - <<: !include common/wifiSignalSensor.yaml
  - <<: !include common/uptimeSensor.yaml

switch:
  - <<: !include common/restartSwitch.yaml
  # - <<: !include common/shutdownSwitch.yaml

text_sensor:
  - <<: !include common/versionTextSensor.yaml
  - <<: !include common/wifiInfoTextSensor.yaml

binary_sensor:
  - platform: template
    name: "${upper_devicename} Right Occupied"
    id: ${devicename}_right_occupied
    device_class: occupancy

  - platform: template
    name: "${upper_devicename} Left Occupied"
    id: ${devicename}_left_occupied
    device_class: occupancy

  - platform: template
    name: "${upper_devicename} Both Occupied"
    id: ${devicename}_both_occupied
    device_class: occupancy

  # Motion sensor (HC SR-501)
  - platform: gpio  
    pin: GPIO4
    name: "${upper_devicename} Below Motion"
    device_class: motion

light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: GPIO13
    num_leds: 150
    rgb_order: GRB
    name: "${upper_devicename} underglow"
    id: ${devicename}_underglow
    default_transition_length: 1s
